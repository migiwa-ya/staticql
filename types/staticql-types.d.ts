// Auto-generated by generate-types.ts

export type HerbsRecord = {
  herbState?: HerbStatesRecord;
  reports?: ReportsRecord[];
  slug: string;
  name: string;
  tags: string[];
};

export type HerbsIndex_name = Record<string, string[]>;

export type HerbsIndex_herbState_name = Record<string, string[]>;

export type HerbsIndex_reports_reportGroupSlug = Record<string, string[]>;

export type HerbsIndex_tags = Record<string, string[]>;

export type HerbsRelation_herbState = Record<string, string>;

export type HerbsRelation_reports = Record<string, string[]>;

export type HerbStatesRecord = { slug: string; name: string };

export type ReportsRecord = {
  herbs?: HerbsRecord[];
  reportGroup?: ReportGroupsRecord;
  processThroughReportGroup?: ProcessesRecord;
  slug: string;
  reportGroupSlug: string;
  summary: string;
  processSlug: string;
  combinedHerbs: {
    slug: string;
    herbStateSlug: string;
    herbPartSlug: string;
    description: string;
  }[];
};

export type ReportsIndex_reportGroupSlug = Record<string, string[]>;

export type ReportsIndex_processSlug = Record<string, string[]>;

export type ReportsIndex_combinedHerbs_slug = Record<string, string[]>;

export type ReportsIndex_herbs_name = Record<string, string[]>;

export type ReportsIndex_processThroughReportGroup_name = Record<
  string,
  string[]
>;

export type ReportsRelation_herbs = Record<string, string[]>;

export type ReportsRelation_reportGroup = Record<string, string>;

export type ReportsRelation_processThroughReportGroup = Record<string, string>;

export type ReportGroupsRecord = {
  slug: string;
  processSlug: string;
  combinedHerbs: {
    slug: string;
    herbStateSlug: string;
    herbPartSlug: string;
  }[];
};

export type ReportGroupsIndex_processSlug = Record<string, string[]>;

export type ProcessesRecord = {
  slug: string;
  name: string;
  description: string;
};

export type ProcessesIndex_name = Record<string, string[]>;

export type SourceTypeMap = {
  herbs: HerbsRecord;
  herbStates: HerbStatesRecord;
  reports: ReportsRecord;
  reportGroups: ReportGroupsRecord;
  processes: ProcessesRecord;
};
